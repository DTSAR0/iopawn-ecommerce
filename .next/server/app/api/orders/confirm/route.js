(()=>{var e={};e.id=176,e.ids=[176],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},4761:()=>{},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},24148:(e,r,t)=>{"use strict";t.d(r,{db:()=>s});let o=require("@prisma/client"),s=global.db??new o.PrismaClient},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},68313:()=>{},92391:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>g,routeModule:()=>u,serverHooks:()=>f,workAsyncStorage:()=>l,workUnitAsyncStorage:()=>p});var o={};t.r(o),t.d(o,{POST:()=>c});var s=t(44713),n=t(18198),d=t(84557),i=t(61768),a=t(24148);async function c(e){try{console.log("\uD83D\uDD04 Confirming order and updating stock...");let{orderId:r}=await e.json();if(console.log("\uD83D\uDCE6 Order confirmation request:",{orderId:r}),!r)return console.log("‚ùå Missing orderId"),i.NextResponse.json({success:!1,error:"Missing orderId"},{status:400});let t=await a.db.order.findUnique({where:{id:r},select:{id:!0,status:!0,orderItems:!0}});if(!t)return console.log("‚ùå Order not found:",r),i.NextResponse.json({success:!1,error:"Order not found"},{status:404});if("PAID"===t.status)return console.log("‚úÖ Order already confirmed:",r),i.NextResponse.json({success:!0,message:"Order already confirmed",orderId:t.id});if("CANCELLED"===t.status)return console.log("‚ùå Order is cancelled:",r),i.NextResponse.json({success:!1,error:"Order is cancelled"},{status:400});if("PENDING"!==t.status)return console.log("‚ùå Order status is not PENDING:",t.status),i.NextResponse.json({success:!1,error:"Order cannot be confirmed"},{status:400});for(let e of(console.log("‚úÖ Order found and eligible for confirmation"),t.orderItems)){let r=await a.db.product.findUnique({where:{id:e.productId},select:{stockQuantity:!0}});if(!r){console.log(`‚ùå Product ${e.productId} not found`);continue}let t=r.stockQuantity-e.quantity;console.log(`üì¶ Product ${e.productId}: ${r.stockQuantity} - ${e.quantity} = ${t}`),t<=0?(await a.db.product.delete({where:{id:e.productId}}),console.log(`üóëÔ∏è  Product ${e.productId} deleted (stock reached 0)`)):(await a.db.product.update({where:{id:e.productId},data:{stockQuantity:t}}),console.log(`üì¶ Updated stock for product ${e.productId}: ${t}`))}let o=await a.db.order.update({where:{id:r},data:{status:"PAID"}});return console.log("‚úÖ Order confirmed and stock updated:",r),i.NextResponse.json({success:!0,orderId:o.id,status:o.status})}catch(e){return console.error("‚ùå Error confirming order:",e),i.NextResponse.json({success:!1,error:"Failed to confirm order",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}let u=new s.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/orders/confirm/route",pathname:"/api/orders/confirm",filename:"route",bundlePath:"app/api/orders/confirm/route"},resolvedPagePath:"/Users/dmytrotsariuk/Desktop/iopawn-ecommerce/app/api/orders/confirm/route.ts",nextConfigOutput:"",userland:o}),{workAsyncStorage:l,workUnitAsyncStorage:p,serverHooks:f}=u;function g(){return(0,d.patchFetch)({workAsyncStorage:l,workUnitAsyncStorage:p})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[915,654],()=>t(92391));module.exports=o})();